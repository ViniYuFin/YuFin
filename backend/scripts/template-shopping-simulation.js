const mongoose = require('mongoose');
require('dotenv').config();

async function createShoppingSimulationTemplate() {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    
    const Lesson = mongoose.model('Lesson', new mongoose.Schema({}, { strict: false }));
    
    console.log('üõí CRIANDO TEMPLATE SHOPPING SIMULATION PERSONALIZADO');
    console.log('============================================================');
    
    // Buscar a li√ß√£o "Marketing e persuas√£o"
    const lesson = await Lesson.findOne({ 
      title: { $regex: /Marketing.*persuas√£o/i },
      gradeId: "8¬∫ Ano"
    });
    
    if (!lesson) {
      console.log('‚ùå Li√ß√£o "Marketing e persuas√£o" n√£o encontrada');
      return;
    }
    
    console.log('üìã Li√ß√£o encontrada:', lesson.title);
    console.log('üìä S√©rie:', lesson.gradeId);
    console.log('üéØ Tipo:', lesson.type);
    
    // ESTRUTURA PERSONALIZADA PARA SHOPPING SIMULATION
    const newShoppingStructure = {
      // Cen√°rio principal
      scenario: {
        title: "Decis√£o de Compra Inteligente",
        description: "Voc√™ tem R$ 500 para gastar. Analise as estrat√©gias de marketing e tome decis√µes conscientes!",
        budget: 500
      },
      
      // Objetivos da li√ß√£o
      objectives: [
        "Identificar estrat√©gias de marketing e persuas√£o",
        "Distinguir entre necessidades e desejos",
        "Tomar decis√µes de compra conscientes",
        "Resistir a t√©cnicas de persuas√£o desnecess√°rias",
        "Priorizar gastos essenciais"
      ],
      
      // Produtos com estrat√©gias de marketing
      products: [
        {
          id: 1,
          name: "Smartphone B√°sico (Usado)",
          price: 200,
          description: "Celular funcional para comunica√ß√£o essencial. Modelo de 2 anos atr√°s, em bom estado.",
          type: "necessidade",
          category: "Essencial",
          persuasion: null,
          marketingStrategy: "Produto pr√°tico sem t√©cnicas de persuas√£o",
          isCorrect: true
        },
        {
          id: 2,
          name: "Smartphone Premium (Novo)",
          price: 450,
          description: "O mais novo modelo com c√¢mera de 108MP, tela 4K e processador ultra-r√°pido!",
          type: "desejo",
          category: "Desejo",
          persuasion: "üî• OFERTA LIMITADA! √öltimas unidades! N√£o perca esta oportunidade √∫nica!",
          marketingStrategy: "Urg√™ncia falsa + superlativos + escassez",
          isCorrect: false
        },
        {
          id: 3,
          name: "T√™nis Esportivo B√°sico",
          price: 120,
          description: "T√™nis confort√°vel para atividades f√≠sicas e uso di√°rio.",
          type: "necessidade",
          category: "Essencial",
          persuasion: null,
          marketingStrategy: "Produto funcional sem manipula√ß√£o",
          isCorrect: true
        },
        {
          id: 4,
          name: "T√™nis de Marca (Limitado)",
          price: 350,
          description: "Edi√ß√£o limitada! Apenas 100 pares no Brasil! Seja exclusivo!",
          type: "desejo",
          category: "Desejo",
          persuasion: "‚≠ê EDITION LIMITADA! Apenas 100 pares! Seja o primeiro da sua turma!",
          marketingStrategy: "Exclusividade + escassez + status social",
          isCorrect: false
        },
        {
          id: 5,
          name: "Livro Educativo",
          price: 40,
          description: "Livro sobre educa√ß√£o financeira para jovens.",
          type: "necessidade",
          category: "Essencial",
          persuasion: null,
          marketingStrategy: "Produto educativo sem manipula√ß√£o",
          isCorrect: true
        },
        {
          id: 6,
          name: "Poupan√ßa para Emerg√™ncia",
          price: 100,
          description: "Guardar dinheiro para imprevistos e emerg√™ncias futuras.",
          type: "investimento",
          category: "Investimento",
          persuasion: null,
          marketingStrategy: "Decis√£o financeira respons√°vel",
          isCorrect: true
        }
      ],
      
      // Sistema de feedback
      feedback: {
        success: "üéâ Excelente! Voc√™ resistiu √†s t√©cnicas de marketing e fez escolhas inteligentes!",
        warning: "üëç Bom trabalho! Voc√™ identificou algumas estrat√©gias de persuas√£o.",
        failure: "üí° Continue praticando! Analise melhor as t√©cnicas de marketing usadas.",
        perfect: "üèÜ Perfeito! Voc√™ dominou a arte de comprar conscientemente!"
      },
      
      // Dicas educativas
      tips: [
        "Analise se voc√™ realmente precisa do produto",
        "Desconfie de ofertas 'limitadas' e '√∫ltimas unidades'",
        "Compare pre√ßos antes de comprar",
        "Resista √† press√£o social e ao FOMO",
        "Priorize necessidades sobre desejos"
      ],
      
      // Estrat√©gias de marketing identificadas
      marketingStrategies: [
        {
          name: "Urg√™ncia Falsa",
          description: "Criar press√£o temporal artificial",
          example: "√öltimas unidades! Oferta por tempo limitado!"
        },
        {
          name: "Escassez",
          description: "Fazer parecer que o produto √© raro",
          example: "Apenas 100 unidades dispon√≠veis!"
        },
        {
          name: "Press√£o Social",
          description: "Usar o medo de ficar de fora",
          example: "Todos os seus amigos j√° t√™m!"
        },
        {
          name: "Superlativos",
          description: "Usar palavras exageradas",
          example: "O melhor! O mais vendido! Revolucion√°rio!"
        },
        {
          name: "Desconto Falso",
          description: "Mostrar pre√ßos inflacionados",
          example: "De R$ 1000 por apenas R$ 300!"
        }
      ],
      
      // Configura√ß√µes visuais
      visual: {
        showMarketingStrategy: true,
        showPersuasion: true,
        highlightCorrectChoices: true,
        showBudget: true,
        showObjectives: true
      },
      
      // Sistema de pontua√ß√£o
      scoring: {
        correctChoice: 25,
        withinBudget: 30,
        resistPersuasion: 20,
        chooseNecessity: 15,
        chooseInvestment: 10,
        maxPoints: 100
      }
    };
    
    // For√ßar atualiza√ß√£o completa da li√ß√£o
    const updateResult = await Lesson.updateOne(
      { _id: lesson._id },
      { 
        $set: { 
          content: newShoppingStructure,
          updatedAt: new Date()
        }
      }
    );
    
    console.log('üîÑ Resultado da atualiza√ß√£o:', updateResult);
    
    console.log('‚úÖ Template shopping simulation criado com sucesso!');
    console.log('üìä Produtos criados:', newShoppingStructure.products.length);
    console.log('üéØ Estrat√©gias de marketing:', newShoppingStructure.marketingStrategies.length);
    console.log('üí∞ Or√ßamento:', newShoppingStructure.scenario.budget);
    console.log('‚è±Ô∏è Tempo estimado: 15-20 minutos');
    
  } catch (error) {
    console.error('‚ùå Erro ao criar template shopping simulation:', error);
  } finally {
    mongoose.connection.close();
  }
}

createShoppingSimulationTemplate();
