require('dotenv').config({ path: '../.env' });
const mongoose = require('mongoose');
const Lesson = require('../models/Lesson');

mongoose.connect(process.env.MONGODB_URI);

async function createClassifyTemplate() {
  try {
    console.log('üè∑Ô∏è CRIANDO TEMPLATE CLASSIFY PERSONALIZADO');
    console.log('='.repeat(60));
    
    // Buscar a li√ß√£o "Necessidades vs Desejos"
    const lesson = await Lesson.findOne({ title: 'Necessidades vs Desejos' });
    
    if (!lesson) {
      console.log('‚ùå Li√ß√£o "Necessidades vs Desejos" n√£o encontrada');
      return;
    }
    
    console.log('üìã Li√ß√£o encontrada:', lesson.title);
    console.log('üìä S√©rie:', lesson.gradeId);
    console.log('üéØ Tipo:', lesson.type);
    
    // ESTRUTURA PERSONALIZADA PARA CLASSIFY
    const newClassifyStructure = {
      // Cen√°rio principal
      scenario: "Voc√™ est√° organizando sua lista de compras e precisa classificar cada item como NECESSIDADE ou DESEJO. Isso vai ajudar voc√™ a priorizar seus gastos e fazer escolhas financeiras mais inteligentes!",
      
      // Itens para classificar
      items: [
        {
          text: "Comida para o almo√ßo",
          correctCategory: "Necessidades",
          explanation: "Alimenta√ß√£o √© uma necessidade b√°sica para sobreviv√™ncia."
        },
        {
          text: "Videogame novo",
          correctCategory: "Desejos",
          explanation: "Entretenimento √© um desejo, n√£o uma necessidade b√°sica."
        },
        {
          text: "Rem√©dio para dor de cabe√ßa",
          correctCategory: "Necessidades",
          explanation: "Medicamentos s√£o necess√°rios para a sa√∫de."
        },
        {
          text: "T√™nis de marca famosa",
          correctCategory: "Desejos",
          explanation: "Roupas de marca s√£o desejos, n√£o necessidades b√°sicas."
        },
        {
          text: "Material escolar",
          correctCategory: "Necessidades",
          explanation: "Educa√ß√£o √© uma necessidade para o desenvolvimento."
        },
        {
          text: "Smartphone de √∫ltima gera√ß√£o",
          correctCategory: "Desejos",
          explanation: "Tecnologia de ponta √© um desejo, n√£o uma necessidade b√°sica."
        },
        {
          text: "√Ågua pot√°vel",
          correctCategory: "Necessidades",
          explanation: "√Ågua √© uma necessidade b√°sica para sobreviv√™ncia."
        },
        {
          text: "Viagem de f√©rias",
          correctCategory: "Desejos",
          explanation: "Lazer e viagens s√£o desejos, n√£o necessidades b√°sicas."
        },
        {
          text: "Roupas b√°sicas para o trabalho",
          correctCategory: "Necessidades",
          explanation: "Roupas adequadas para trabalho s√£o necess√°rias."
        },
        {
          text: "Acess√≥rios de moda",
          correctCategory: "Desejos",
          explanation: "Acess√≥rios s√£o desejos, n√£o necessidades b√°sicas."
        }
      ],
      
      // Categorias dispon√≠veis
      categories: [
        {
          name: "Necessidades",
          description: "Itens essenciais para sobreviv√™ncia e bem-estar b√°sico",
          icon: "üè†",
          color: "#10B981",
          examples: [
            "Alimenta√ß√£o b√°sica",
            "Moradia",
            "Sa√∫de",
            "Educa√ß√£o",
            "Transporte essencial"
          ]
        },
        {
          name: "Desejos",
          description: "Itens que melhoram a qualidade de vida, mas n√£o s√£o essenciais",
          icon: "üéØ",
          color: "#F59E0B",
          examples: [
            "Entretenimento",
            "Luxos",
            "Tecnologia avan√ßada",
            "Viagens",
            "Acess√≥rios"
          ]
        }
      ],
      
      // Sistema de pontua√ß√£o
      scoring: {
        perfect: 100,
        good: 80,
        average: 60,
        pointsPerCorrect: 10
      },
      
      // Feedback educacional
      feedback: {
        correct: "Correto! Voc√™ classificou adequadamente este item.",
        incorrect: "Tente novamente! Pense se este item √© essencial para sua sobreviv√™ncia ou apenas um desejo.",
        complete: "Parab√©ns! Voc√™ entendeu a diferen√ßa entre necessidades e desejos!",
        tips: [
          "Necessidades s√£o essenciais para sobreviv√™ncia e bem-estar b√°sico",
          "Desejos melhoram a qualidade de vida, mas n√£o s√£o essenciais",
          "Priorize necessidades antes de satisfazer desejos",
          "Alguns itens podem ser necessidades em certas situa√ß√µes e desejos em outras"
        ]
      },
      
      // Configura√ß√µes do jogo
      settings: {
        allowMultipleCategories: false,
        showExplanations: true,
        timeLimit: 480, // 8 minutos
        shuffleItems: true
      },
      
      // Metadados educacionais
      metadata: {
        difficulty: 1,
        estimatedTime: "8-12 minutos",
        learningObjectives: [
          "Distinguir entre necessidades e desejos",
          "Desenvolver consci√™ncia sobre prioridades financeiras",
          "Aprender a fazer escolhas conscientes de consumo",
          "Entender a import√¢ncia de priorizar gastos"
        ],
        skills: [
          "classifica√ß√£o",
          "prioriza√ß√£o",
          "consci√™ncia-financeira",
          "tomada-de-decis√£o"
        ]
      }
    };
    
    // Atualizar a li√ß√£o
    lesson.content = newClassifyStructure;
    lesson.updatedAt = new Date();
    
    await lesson.save();
    
    console.log('‚úÖ Template Classify criado com sucesso!');
    console.log('üìä Itens criados:', newClassifyStructure.items.length);
    console.log('üè∑Ô∏è Categorias:', newClassifyStructure.categories.length);
    console.log('‚è±Ô∏è Tempo estimado: 8-12 minutos');
    console.log('\nüéÆ Funcionalidades inclu√≠das:');
    console.log('   ‚úÖ Sistema de classifica√ß√£o por categorias');
    console.log('   ‚úÖ 10 itens para classificar');
    console.log('   ‚úÖ Explica√ß√µes educacionais');
    console.log('   ‚úÖ Sistema de pontua√ß√£o');
    console.log('   ‚úÖ Dicas sobre necessidades vs desejos');
    
  } catch (error) {
    console.error('‚ùå Erro ao criar template classify:', error);
  } finally {
    mongoose.connection.close();
  }
}

createClassifyTemplate();


















